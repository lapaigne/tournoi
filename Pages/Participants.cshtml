@page
@model ParticipantsModel

<style>
    .participants-table-wrapper {
        max-height: 75vh;
        overflow-y: auto;
        margin-bottom: 2.5rem;
        max-width: 900px;
        margin-left: auto;
        margin-right: auto;
        width: 95%;
        box-sizing: border-box;
        position: relative;
    }

</style>

<div class="participants-table-wrapper">
    <table id="playersTable" class="table table-striped table-bordered">
        <thead>
            <tr>
                <th class="sortable" onclick="sortTable(0)">Имя</th>
                <th class="sortable" onclick="sortTable(1)">Город</th>
                <th>СИ</th>
                <th>Анти</th>
                <th>ЭК</th>
                <th>Пары</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var p in Model.Participants)
            {
            <tr>
                <td>@p.FullName</td>
                <td>@p.City</td>
                <td>@(p.SI ? "✓" : "")</td>
                <td>@(p.ASI ? "✓" : "")</td>
                <td>@(p.EQ ? "✓" : "")</td>
                <td>@(p.PSI ? "✓" : "")</td>
            </tr>
            }
        </tbody>
    </table>
</div>

<script>
    // JavaScript for sorting and filtering
    function filterTable() {
        const input = document.getElementById("searchInput").value.toLowerCase();
        const rows = document.querySelectorAll("#playersTable tbody tr");

        rows.forEach(row => {
            const name = row.children[0].textContent.toLowerCase();
            const city = row.children[1].textContent.toLowerCase();
            row.style.display = (name.includes(input) || city.includes(input)) ? "" : "none";
        });
    }

    function sortTable(column) {
        const table = document.getElementById("playersTable");
        const rows = Array.from(table.tBodies[0].rows);

        rows.sort((a, b) => {
            const textA = a.cells[column].textContent.trim().toLowerCase();
            const textB = b.cells[column].textContent.trim().toLowerCase();
            return textA.localeCompare(textB);
        });

        rows.forEach(row => table.tBodies[0].appendChild(row));
    }
</script>
