@page
@model Tournoi.Pages.EQBalancerModel
@using Tournoi.Models
@using Tournoi.DB
@{
ViewData["Title"] = "EQ Balancer";
Layout = "_Layout";
}

<style>
    /* Renamed from .people-table to .eqb-table for EQBalancer page */
    .eqb-table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0;
        background: #fff;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 2px 8px -3px rgba(0, 0, 0, 0.07);
        font-size: 1rem;
    }

    .eqb-table thead tr {
        background: #f1f3f6;
    }

    .eqb-table th,
    .eqb-table td {
        padding: 0.7rem 1rem;
        text-align: left;
        border-bottom: 1px solid #e6e6e6;
    }

    .eqb-table th {
        font-size: 1.07rem;
        font-weight: 600;
        color: #374151;
        letter-spacing: 0.02em;
    }

    .eqb-table tbody tr:last-child td {
        border-bottom: none;
    }

    .eqb-table tr:hover td {
        background: #f6fafd;
        transition: background 0.18s;
    }

    .eqb-table td {
        color: #333;
    }

    .eqb-table td.actions {
        min-width: 120px;
        text-align: center;
    }

    .eqb-table button {
        background: #f5f8fa;
        border: 1px solid #cfd8dc;
        color: #2471a3;
        border-radius: 5px;
        padding: 0.3rem 0.95rem;
        margin-right: 0.25rem;
        font-size: 0.98rem;
        cursor: pointer;
        transition: background 0.14s, border 0.14s, color 0.14s;
    }

    .eqb-table button:last-child {
        margin-right: 0;
    }

    .eqb-table button:hover {
        background: #e3f0fd;
        border-color: #90caf9;
        color: #0d47a1;
    }

    .eqb-table .checkmark {
        color: #27ae60;
        font-weight: bold;
        font-size: 1.1em;
    }

    .eqb-table .crossmark {
        color: #c0392b;
        font-weight: bold;
        font-size: 1.1em;
    }

    #edit-people-container {
        display: flex;
        flex-direction: row;
        gap: 32px;
        align-items: flex-start;
        max-width: 1600px;
        margin: 0 auto 2.5rem auto;
        min-height: 70vh;
        overflow-x: auto;
    }

    #eqbalancer-panel {
        flex: 0 0 340px;
        min-width: 260px;
        max-width: 400px;
        background: #f8f9fa;
        border-radius: 8px;
        padding: 20px 20px 18px 20px;
        box-shadow: 0 2px 8px -4px rgba(0, 0, 0, 0.06);
        box-sizing: border-box;
        display: flex;
        flex-direction: column;
        gap: 16px;
        align-items: stretch;
        justify-content: flex-start;
    }

    #eqbalancer-table-container {
        flex: 1 1 900px;
        min-width: 340px;
        max-width: 100%;
        height: 80vh;
        overflow-y: auto;
        background: #fff;
        border: 1px solid #e2e2e2;
        border-radius: 8px;
        padding: 16px 14px;
        box-sizing: border-box;
        display: flex;
        flex-direction: column;
        align-items: stretch;
    }

    .panel-title {
        font-size: 1.1rem;
        font-weight: 700;
        margin-bottom: 10px;
        color: #223;
        letter-spacing: 1px;
    }

    .panel-toggles label {
        display: flex;
        align-items: center;
        gap: 7px;
        margin-bottom: 8px;
        font-size: 1rem;
        cursor: pointer;
        user-select: none;
    }

    .btn-panel-generate {
        background: #007bff;
        border: none;
        color: #fff;
        font-weight: 600;
        border-radius: 5px;
        padding: 0.5rem 0;
        font-size: 1.05rem;
        margin-top: 1rem;
        cursor: pointer;
        padding-left: 20px;
        padding-right: 20px;

    }

    .blue-checkbox input[type="checkbox"] {
        accent-color: #337ab7;
    }
</style>

<div id="edit-people-container">
    <!-- Panel on the Left -->
    <aside id="eqbalancer-panel">
        <div class="panel-title">Балансировка команд</div>
        <form method="post" asp-page-handler="Generate" style="">
            <button type="submit" class="btn-panel-generate">Подобрать команды</button>
        </form>
        <div class="panel-toggles">
            <label class="blue-checkbox">
                <input type="checkbox" id="showCity" checked> Показать город
            </label>
            <label class="blue-checkbox">
                <input type="checkbox" id="showRank" checked> Показать рейтинг
            </label>
        </div>
    </aside>

    <!-- Table on the Right -->
    <div id="eqbalancer-table-container">
        @if (Model.Teams?.Any() == true)
        {
        <table class="eqb-table">
            <thead>
                <tr>
                    <th>№</th>
                    <th>Игрок 1</th>
                    <th>Игрок 2</th>
                    <th>Игрок 3</th>
                    <th>Игрок 4</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Teams.Count; i++) { var team=Model.Teams[i]; PersonModel[] players=new[] {
                    team.Player1, team.Player2, team.Player3, team.Player4 }; <tr>
                    <td>@(i + 1)</td>
                    @foreach (var player in players)
                    {
                    <td>
                        <div><b>@player?.FullName</b></div>
                        <div>
                            <span class="player-city"><i>@player?.City</i></span>
                            <span class="player-rank">@player?.Rank</span>
                        </div>
                    </td>
                    }
                    </tr>
                    }
            </tbody>
        </table>
        }
    </div>
</div>

@section Scripts {
<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll('.panel-toggles input[type="checkbox"]').forEach(cb => {
            cb.addEventListener('change', toggleColumns);
        });
        toggleColumns();
    });

    function toggleColumns() {
        let showCity = document.getElementById("showCity").checked;
        let showRank = document.getElementById("showRank").checked;

        document.querySelectorAll(".player-city").forEach(el => {
            el.style.display = showCity ? "inline" : "none";
        });
        document.querySelectorAll(".player-rank").forEach(el => {
            el.style.display = showRank ? "inline" : "none";
        });
    }
</script>
}
